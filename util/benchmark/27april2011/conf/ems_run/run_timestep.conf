# ==============================================================================================
# THE UEMS SIMULATION TIME STEP CONFIGURATION FILE
# ==============================================================================================
#
# SO WHAT DOES THIS CONFIGURATION FILE DO FOR ME?
#
#   Below you will find the list of settings for determining the time step for your
#   simulation. If you are already nervous about the prospects of selecting a proper
#   time step value, then just close up this file and forgetaboutit. That's because
#   the UEMS comes pre-configured to automatically select an appropriate time step
#   for your simulation.
#
#   LOG:  R.Rozumalski - NWS January 2014
#
# ==============================================================================================
# ==============================================================================================
#

#  ------------------------------------------------------------------------
#  Selecting the perfect time step for your limited area domain
#  ------------------------------------------------------------------------
#
#    The TIME_STEP parameter may contain either a value, in seconds, to use
#    as the large time step during model integration, or a character string
#    to specify a method to use in determining an appropriate value.
#
#    The objective in setting the time step is to use as large a value as
#    possible, without causing the simulation to crash due violations of the
#    CFL condition. For a given time step, CFL violations are more likely to
#    occur with increasing baroclinicity (wind speeds) within the simulated
#    environment. Conversely, CFL violations (for a given time step) are
#    less likely to occur in a more barotropic simulated environment, such
#    as over tropical regions. However, CFL violations can also occur within
#    a small computational domain that is convectively active.

#  ------------------------------------------------------------------------
#  Selecting a time step for your nested domains - You don't
#  ------------------------------------------------------------------------
#
#    The time step value for nested domains is calculated from parent:child
#    grid ratio. If the parent domain grid spacing is 12km and a child
#    domain is 4km (3:1 ratio), the time step ratio will also be 3:1.
#
#  ------------------------------------------------------------------------
#  Selecting a time step for your global domain
#  ------------------------------------------------------------------------
#
#    If you are running a global domain with the ARW core, then you need to
#    use a smaller time step for a given grid spacing due to the poleward
#    convergence of the lat-lon gridlines (and thus decreasing DX). The
#    UEMS Oracle is suggesting 5*DX*cos(FFT_FILTER_LAT), which take into
#    account the mapscale factor at the latitude specified by the value of
#    FFT_FILTER_LAT. The FFT_FILTER_LAT value is the latitude at which the
#    FFT routines begin to filter out high-frequency waves when running
#    over a global domain. If you wish to change FFT_FILTER_LAT then see
#    the dynamics configuration file. See the "AUTO" option below.
#
#  ------------------------------------------------------------------------
#  Possible TIME_STEP Options
#  ------------------------------------------------------------------------
#
#    There are 4 options for setting the value in TIME_STEP; AUTO, AUTO_S,
#    ADAPTIVE, or your own MANUALLY SET VALUE. Here is a summary:
#
#    TIME_STEP = AUTO_S or AUTO (default)
#
#      Set TIME_STEP = AUTO_S or AUTO if you want the UEMS to calculate an
#      appropriate time step for your model runs. Both methods are based on
#      the NCAR WRF recommended value of "6*DX(km)", with the difference
#      being that "AUTO" uses a DX value taken from the center of the main
#      computational domain, while "AUTO_S" uses the DX value from the smallest
#      grid box within the domain. Simply stated:
#
#        AUTO   - Calculate time step from reference DX at domain center
#        AUTO_S - Calculate time step from smallest DX within domain
#
#      What's the difference? Well, with some map projections, the grid spacing
#      (DX and DY) changes in the N<->S and E<->W directions, but mostly in the
#      N<->S direction, with the amount of the change depending upon the grid
#      depending upon the grid projection used. Consequently, the grid spacing
#      along the northern and southern lateral boundaries of a relatively large
#      domain may be significantly different (larger or smaller) than the one
#      used to calculate the time step for your model run.  If the grid spacing
#      is much smaller than the reference DX, then it may require a smaller time
#      step be used to avoid potential linear instability and model crashes.
#
#      Additionally, the calculated time step may be adjusted slightly so that
#      the simulation times coincide with boundary condition update times.
#      See "TIMESTEP_SYNC" below.
#
#    GLOBAL DOMAIN USERS
#
#      If you are running a simulation over a global domain then the effective
#      grid spacing used to determine the primary model time step will be taken
#      at the latitude specified by FFT_FILTER_LAT in the run_dynamics.conf file.
#      In most cases this will be 45degrees N/S meaning that the DX, and
#      consequently, the DT used will be about 30% smaller.
#
#    TIME_STEP = ADAPTIVE
#
#      The adaptive time step was developed by Todd Hutchinson and is relatively
#      new to ARW users. The principle behind the adaptive time step is that the
#      Runge-Kutta time step can be varied as necessary throughout a simulation
#      to improve model performance and reduce model instability problems. Tests
#      have shown that model run times can be reduced through this method although
#      individual run time may vary from run to run. Experience has demonstrated
#      that the adaptive method works very well for relatively large domains.
#      Simulations with small domains or those with child domains may have stability
#      stability issues with strong baroclinic environments or when a large amount
#      of convection exists.
#
#      More information on the adaptive time step can be found by reading the
#      UEMS/docs/arw/adaptive_time step.pdf document.
#
#      Additional user-controllable parameters for the adaptive time step can by
#      found at the bottom of this configuration file. In general there is no
#      need to modify the values as they are taken from the recommended settings;
#      however, they are there if you want to change them. Also note that the
#      sound time step parameter will be set to 0 (recommended) when using the
#      adaptive time step option.
#
#    TIME_STEP = <MANUALLY SET.VALUE>
#
#      This option is just what you think it is. You can pick a value for the
#      simulation time step in seconds (10ths are OK). So if you want to set the
#      time step for your 4km ARW core simulation to 67.2 (seconds) then go right
#      ahead. Results will vary depending on user input and state of inebriation
#      at the time of model configuration. It is recommended that the user follow
#      the guidelines for setting the time step presented at the top of this file
#      but that hasn't stopped free-spirited modelers before.
#
#      For limited area ARW core simulations, the official WRF suggested time step
#      step value is DX*6, where DX is the grid spacing in km at the center of the
#      domain.  For example, a 10km grid spacing has a time step of 60 seconds. It
#      is also recommended that the time step divide evenly into the BC update
#      frequency, so a slight adjustment of the user value may be necessary.
#
#      Another consideration when manually defining your time step is the maximum
#      value of the map scale factor within your domain (See: TIME_STEP = AUTO_S
#      discussion above).  If your domain is relatively large and/or displaced
#      poleward, you should consider scaling your time step (down). For example,
#      if largest mapscale factor of your primary domain is 1.3, with DX = 12km
#      at the center (TS = 6*DX = 6*12 = 72s), then you should scale your time
#      step by 1.3 (TS = 72s/1.3 = ~55.4s). This is equivalent to using the
#      TIME_STEP = Auto_S option.
#
#   ADDITIONAL FACTORS
#
#      If FDDA is turned ON (nudging), then the simulation time step must
#      coincide with a input data file time. Consequently, the time step value
#      will automatically be adjusted if necessary.
#
#  THE UEMS IS THE FINAL "DECIDER" - MOST OF THE TIME
#
#      An important factor in selecting a time step is that the value must divide
#      evenly in to the BC update frequency.  Failing to follow this requirement
#      can result in a transient and very difficult to diagnose model crashes.
#      Consequently, all time steps will be tested for this requirement and
#      adjusted if necessary. The way to get around this "Nanny State" limitation
#      on your modeling freedoms is to set TIMESTEP_SYNC = 0 below.
#
#
#  DEFAULT: TIME_STEP = Auto
#
TIME_STEP = 90


#  ------------------------------------------------------------------------
#  Synchronization of time step to BC update frequency and output times
#  ------------------------------------------------------------------------
#
#    TIMESTEP_SYNC = 0, 1, 2
#
#      Setting TIMESTEP_SYNC to a non-zero value will cause ems_run to refine the
#      simulation time step such that model step times will exactly coincide with
#      BC update and/or simulation output times.
#
#      WHY DO I NEED THIS?
#
#      If a step does not correspond exactly with an expected data output time, the
#      simulation output file will be will be written out first time step AFTER the
#      anticipated time. By default, the UEMS is configured to place the desired
#      time stamp on the data, but the true valid time of the data may be different
#      from the time stamp.
#
#      There are times when a sub domain time step does not correspond exactly with
#      an expected data output time, in which case the model will write the history
#      file at the first time step AFTER the anticipated time. The UEMS is configured
#      to place the desired time stamp on the data but the true valid time of the
#      data may be different from the time stamp.
#
#      Possible values for TIMESTEP_SYNC are 0, 1, 2
#
#      Setting TIMESTEP_SYNC = 0  will turn OFF all syncing of time steps - you get what you get
#      Setting TIMESTEP_SYNC = 1  Will sync the time step to coincide with BC update times
#      Setting TIMESTEP_SYNC = 2  (Anything else) Sync to both BC update and model output times
#
#      If you set TIMESTEP_SYNC = 0, then the times listed in the output files will
#      reflect the expected simulation data dump times, but the reality is that the
#      true validation time may be a few minutes after (maximum) the file time stamp.
#
#  NOTE:  TIMESTEP_SYNC = 0 may result in simulation crashes unless BC the update
#         frequency requirement is observed. It's the LAW!
#
#  DEFAULT: TIMESTEP_SYNC = 1 (sync to BC update frequency)
#
TIMESTEP_SYNC = 1


# ==============================================================================================
#  Time step calculation methods
# ==============================================================================================


#  OPTION:  TIME_STEP_SOUND - number of sound time steps per main time step
#
#  VALUES:  Typical value is 4 (4:1 ratio); however, if you are using a time
#           step much larger than 6*dx you may need to increase this value.
#           Also, if a simulation becomes unstable, increasing this value is
#           something you could try.
#
#  NOTES:   Only use even integers
#
#           If using the adaptive time step option then TIME_STEP_SOUND
#           will automatically be set to 0 as required by law.
#
#  DEFAULT: TIME_STEP_SOUND = 0 (set automatically)
#
TIME_STEP_SOUND = 0



# ==============================================================================================
#  ANCILLARY CONFIGURATION SETTINGS FOR THE ADAPTIVE TIME STEP OPTION (MAX DOMAINS)
# ==============================================================================================
#

#  OPTION:  STEP_TO_OUTPUT_TIME
#
#           Modify the time steps (T or F) so that the exact file output time is
#           reached. This is likely what you want so don't touch it.
#
#  DEFAULT: STEP_TO_OUTPUT_TIME = T
#
STEP_TO_OUTPUT_TIME = T


#  OPTION:  TARGET_CFL  - Increase time step  if vertical CFL < TARGET_CFL.
#
#  DEFAULT: TARGET_CFL = 1.2
#
TARGET_CFL = 1.2, 1.2, 1.2


#  OPTION:  TARGET_HCFL - Increase time step if horizontal  CFL < TARGET_HCFL
#
#  DEFAULT: TARGET_HCFL = 0.84
#
TARGET_HCFL = 0.84, 0.84, 0.84


#  OPTION:  MAX_STEP_INCREASE_PCT - Max % of previous time step to increase if maximum CFL < TARGET_CFL.
#
#  DEFAULT: MAX_STEP_INCREASE_PCT = 5,51,51
#
MAX_STEP_INCREASE_PCT = 5, 51, 51, 51, 51


#  OPTION:  STARTING_TIME_STEP - The starting time step (seconds; positive integer)
#
#  NOTES:   STARTING_TIME_STEP is the starting time step to use for the simulation.
#           A value of -1 will set the initial time step to 4*DX when the adaptive
#           method is being used.
#
#           The "4*DX" value is taken directly from the WRF source code, which differs
#           from the available documentation. Apparently, the WRF developers are just
#           as slow to update documentation as the UEMS developer.
#
#  DEFAULT: STARTING_TIME_STEP = -1
#
STARTING_TIME_STEP = -1, -1, -1


#  OPTION:  MAX_TIME_STEP - The maximum time step (seconds; positive integer)
#
#  NOTES:   MAX_TIME_STEP is the maximum time step that can be achieved.
#           A value of -1 tells the ARW to use a value of 8*DX when the adaptive
#           method is being used.
#
#           The "8*DX" value is taken directly from the WRF source code. Better
#           performance may be achieved by manually setting MAX_TIME_STEP to
#           a value greater than 8*DX but you increase the risk of a crash.
#
#  DEFAULT: MAX_TIME_STEP = -1
#
MAX_TIME_STEP = -1, -1, -1


#  OPTION:  MIN_TIME_STEP - The minimum time step (seconds; positive integer)
#
#  NOTES:   MIN_TIME_STEP is the minimum time step that can be achieved.
#           A value of -1 tells the ARW to use a value of 3*DX when the adaptive
#           method is being used.
#
#  ALSO:    Although MIN_TIME_STEP may be set, it is possible for the time step
#           to become negative (!) under certain conditions, in which case the
#           simulation will terminate.
#
#  DEFAULT: MIN_TIME_STEP = -1
#
MIN_TIME_STEP = -1


#  OPTION:  ADAPTATION_DOMAIN - Domain to drive the adaptive time step
#
#  NOTES:   ADAPTATION_DOMAIN sets the domain used to determine the advective time step
#           The default is 1, the primary domain, but consider changing this value when
#           running a nested simulation, especially if the simulation fails.
#
#  DEFAULT: ADAPTATION_DOMAIN = 1
#
ADAPTATION_DOMAIN = 1.


# ==============================================================================================
# THATS ENOUGH time step MUMBO JUMBO FOR NOW
# ==============================================================================================

