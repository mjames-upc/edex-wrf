# ======================================================================================
#  GRIB information file for ems_prep.pl - Robert Rozumalski NWS - September 2017
# ======================================================================================
#
#  This file defines a dataset intended for use by ems_prep.pl to initialize a
#  simulation with the UEMS. Should you decide to mangle its contents or otherwise
#  use this file for nefarious purposes, bad things can happen to your simulation.
#  However, should you be on a quest for personal enlightenment, then  please note
#  that the parameters below are necessary for your happiness and well-being.
#
#  Finally, this information is also available by running "ems_prep --dsinfo <dset>",
#  where <dset> is the dataset ID in the first part of this filename.
# ======================================================================================
#

#  CATEGORY - General categorization of dataset
#
#     CATEGORY is used to categorize the dataset described in this file for the purpose of
#     organizing the available initialization options when passing the --dslist flag. The
#     category may be anything you choose but it's recommended that you stick to the few
#     established conventions unless you have a good reason to create your own, which you
#     don't.
#
#     The current category options include:
#
#         Category                    Description
#         ---------------------------------------------------------------------------------
#         Land Surface Model (LSM)  - Datasets containing LSM-related fields (--lsm)
#         Surface            (SFC)  - Datasets containing static surface fields (--sfc)
#         Forecast           (FCST) - Operational Forecast datasets
#         Analysis           (ANAL) - Operational Analysis datasets (--analysis)
#         Model Forecast     (MODL) - Datasets from Non-operational model runs
#         Historical         (REAN) - Historical or Reanalysis datasets
#
#     The following may be appended to the category to indicate a personal tile dataset
#
#         Personal Tiles     (PTIL) - STRC Personal tile datasets
#
#     If you want something different just make up a category name and it will be handled
#     "appropriately" by ems_prep.
#
#     Leaving CATEGORY blank or undefined will result in the dataset being placed in the
#     "Land of misfit datasets" category. Go ahead and try "ems_prep --dslist", you'll see
#     what I mean.
#
CATEGORY = Forecast 


#  INFO  - Provides some basic information about the dataset described in this file
#
#     INFO provides some general information about the dataset such as forecast frequency,
#     vertical and horizontal resolution, coordinate system of output fields, and areal
#     coverage. Feel free to embellish wherever cryptic information currently resides
#     in this file.
#
#     Example: INFO = .5 degree Global - Isobaric coordinate - 3hourly grib format
#
INFO = NAM Model 0.108 deg Carribean & Central America Domain (25mb) - 3-hourly through hr 60


#  VCOORD identifies the vertical coordinate of the dataset.
#
#     Typical values are
#
#       VCOORD = press  : Isobaric Coordinate
#       VCOORD = hybrid : Hybrid Coordinate (such as RUC)
#       VCOORD = theta  : Isentropic Coordinate
#       VCOORD = height : Height Coordinate
#       VCOORD = sigma  : Sigma Coordinate (Native ARW or NMM)
#       VCOORD = none   : No vertical coordinate (Surface-based) data
#
#     The VCOORD parameter is only used when employing different dataset for initial and
#     boundary conditions, such as when passing "ems_prep --dset hrrr%gfsp25". If you don't
#     know what this means don't worry about it. You'll probably learn it on the streets
#     anyway.
#
VCOORD = press


#  INITFH - Initial hour of dataset
#
#     The value of INITFH only serves its full purpose when initializing a simulation from
#     an operational forecast dataset. In this case, the value of INITFH specifies the
#     forecast file hour to use for the 00-hour or the start of your simulation. Typically,
#     a setting of INITFH = 0 is used, which specifies that the 00-hour forecast file from
#     the identified cycle time (See CYCLE below) as your initialization dataset. However,
#     you may set INITFH = 6, in which case ems_prep will use the 6-hour forecast file to
#     serve as the 0-hour (initialization) dataset for your simulation. In this situation,
#     the 0-hour date/time on your simulation will be same as the validation date/time of
#     the 6-hour forecast file.  The UEMS knows what it's doing well before you do.
#
#     If you are initializing a simulation from an analysis dataset then INITFH only serves
#     to define the default simulation length, FINLFH-INITFH. This value can be overridden
#     in many different ways, for example by passing the --length flag, but it's there in
#     case everything else falls through.
#
#      Examples:
#
#        INITFH    =  00
#
#      Download the 00 hour forecast from the operational dataset as your 00 hour forecast.
#
#        INITFH    =  06
#
#      Download the 06 hour forecast from the operational dataset as your 00 hour forecast.
#
INITFH = 0


#  FINLFH - Final forecast hour of dataset used to initialize your simulation
#
#     The FINLFH parameter may be a bit confusing because it represents something different
#     depending upon whether you are using a forecast or analysis dataset to initialize your
#     simulation, and sometimes it means nothing at all. To understand FINLFH it must be
#     taken in context with INITFH above.
#
#     Assuming no flags are passed to ems_prep or funny business with the CYCLES parameter
#     below, The value of FINLFH defines the last data file to use for initializing your
#     simulation, and the value calculated by FINLFH-INITFH as the LENGTH of your simulation.
#
#     If the initialization dataset originates from an operational forecast system, then
#     FINLFH specifies the last in the sequence of forecast files to use. If the dataset
#     originates from an analysis system, E.g, CFSR, ERA1, then FINLFH is used only to
#     determine the simulation length. If the dataset described by this file is used to
#     augment another initialization dataset via the --lsm or --sfc flags, then FINLFH is
#     completely meaningless, although INITFH might not be.
#
#       Example: FINLFH = 48
#
#     To use the 48 hour forecast from the operational forecast dataset as the last time
#     for your boundary conditions.
#
FINLFH = 24


#  FREQFH - hours between data file timestamps
#
#     FREQFH is the frequency, in hours, of the (forecast) files you wish to download between
#     INITFH and FINLFH. This period serves as the boundary condition update frequency for your
#     simulation and it is recommended that the highest frequency available (lowest value) be
#     used.  The maximum available frequency is sometimes defined by the MAXFREQ parameter at
#     the bottom of this file. Don't worry about it if MAXFREQ is missing. Do not set FREQFH
#     to a value lower than MAXFREQ or bad stuff will happen. Also, FREQFH must be an integer
#     multiple of MAXFREQ, or more bad stuff will happen.
#
#     In some cases, such as with analysis datasets, setting FREQFH = 0 is acceptable. The
#     UEMS will figure you out.
#
#     Example: FREQFH = 03
#
FREQFH = 03


#  CYCLES - Cycle times (UTC) for which files are available
#
#     CYCLES defines the cycle times (UTC) of the forecast or analysis system from which
#     the data files are available. For a operational forecast model, this is often the
#     00-hour time of that run. For an analysis system, the cycle time typically identifies
#     the hour at which the dataset is valid.
#
#     The basic format for this parameter is:
#
#       CYCLES = CYCLE 1, CYCLE 2, ..., CYCLE N,
#
#     where each cycle time (UTC) is separated by a comma (,). For example:
#
#       CYCLES = 00,06,12,18
#
#     IMPORTANT: The times listed in CYCLE are critical to ems_prep.pl working properly as
#     they are used to identify the most recent dataset available when executing real-time
#     simulations. For example, if you want to use data from the 12 UTC operational model
#     run, but  "12" is not listed in the CYCLES, you will be out of luck (SOL). The UEMS
#     will always default to the most recent cycle time from which data are available.
#
#     Alternatively, if you include cycle time for which no dataset exists, you will have
#     problems with your real-time downloads. Just don't do it.
#
#     Please see the DELAY parameter below for more information.
#
#     Default behavior of looking for the most current available dataset can be controlled
#     by using the --cycles command line flag. See "ems_prep --help cycles" for the gory,
#     gory details.
#
#
#     ADVANCED COMPLEX STUFF:
#
#     The CYCLES parameter may be used to override the default INITFH, FINLFH, and FREQFH
#     values defined above. If you do not want to use default settings for every model cycle,
#     you may use:
#
#        CYCLES = CYCLE[:INITFH[:FINLFH[:FREQFH]]],
#
#     there the integer values for INITFH, FINLFH, and FREQFH override the default values
#     specified for the same parameters above, for the cycle time only. For Example:
#
#        CYCLES = 00:24:36:06,06,12:::06,18:12:36
#
#     INTERPRETATION:
#
#       In the above example the individual cycle times are separated by a comma (,), and the
#       INITFH, FINLFH, and FREQFH values are separated by a colon (:). You do not need to
#       redefine each value but you must retain its position in the colon-separated string.
#
#       From the 00Z Cycle run (00:24:36:06), obtain the 24 to 36 hour forecasts every 06
#       These values override the INITFH, FINLFH, and FREQFH default values above!
#
#       From the 06Z Cycle run (06) use the default values of INITFH, FINLFH, and FREQFH as
#       specified above.
#
#       From the 12Z Cycle run (12:::06) use the default values of INITFH and FINLFH, but
#       at a 06 hour boundary condition update frequency.
#
#       From the 18Z Cycle run (18:12:36), use the 12 to 36 hour forecasts files every FREQFH
#       hours as defined above.
#
#    If you really want pain and suffering, peruse the barely comprehensible of the --cycle
#    flag provided by "ems_prep --help cycles".
#
CYCLES = 00,06,12,18


#  DELAY - The number of hours following a CYCLE time when the dataset becomes available
#
#     DELAY represents the number of hours, following a cycle time, before any data files
#     begin appearing on a remote server. In most cases, a lag exists from the time that
#     a model is initialized to when the run is completed and the data are processed and
#     posted. The DELAY parameter is used to account for this period when determining
#     which dataset to access.
#
#     For example, if DELAY=3, then ems_prep will not look for files from a 12 UTC run of
#     an operational forecast model until after 15 UTC (12 UTC + 3 hours). It is important
#     to not set the DELAY value too low, because that will result in ems_prep attempting
#     to acquire files below they exists on the remote server, which is generally frowned
#     upon by the authorities and the UEMS.
#
#     In some cases setting a zero hour delay is acceptable but make sure to account for
#     any minute delays within your crontab.
#
#     Example: DELAY = 05
#
DELAY = 01


#  SERVER-METHOD - Source for the initialization files
#
#     SERVER-METHOD defines the source of the data files used for initialization along with
#     the method used to retrieve them. The format for the parameter is:
#
#       SERVER-METHOD = SERVER ID:/<file location>/<file naming convention>
#
#     IMPORTANT: The SERVER ID must have a corresponding IP/hostname defined in the
#     uems/conf/ems_prep/prep_hostkeys.conf file.
#
#     For specifying the directory and filename on the remote server, the following place-
#     holders may be used wherein they will be replaced by appropriate values in ems_prep.pl.
#
#       YYYY  - 4 digit year
#       YY    - 2 digit year
#       MM    - 2 digit month
#       DD    - 2 digit day
#       CC    - Model cycle hour
#       FF    - 2-digit Forecast hour
#       FFF   - 3-digit Forecast hour
#       NN    - 2-digit Forecast minute
#
#     There are situations when one or more of the reserved place holder character strings
#     is (are) part of the actual filename or path. An example of this condition might be
#     if the letter 'F' immediately precedes the forecast hour in the filename, such as in
#     "nam.t00z.awip3dF012". For such, the file naming convention defined by SERVER-METHOD
#     below would be "nam.tCCz.awip3dFFFF", in which case ems_prep.pl would not know which
#     "FF" or "FFF" to replace.
#
#     To address this potential problem, a "\" may be placed BEFORE each character to be
#     retained   in the filename. In the above example, the file naming convention specified
#     in the filename. In the above example, the file naming convention specified in the
#     would be "nam.tCCz.awip3d\FFFF" and the leading "F" in "FFF" will be preserved in the
#     filename.
#
#
#     METHOD
#
#     The METHOD in "SERVER-METHOD" specifies the method to use to acquire the data. Currently
#     ftp (via ftp - obsolete), http (via http), or nfs (via rsync from the local system - poor
#     choice but stuck for legacy reasons) are supported, indicated by SERVER-FTP, SERVER-HTTP,
#     and SERVER-NFS respectively.
#
#     Examples: SERVER-HTTP = STRC:/data/grib/YYYYMMDD/nam/grid212/grib.tCCz/nam.tCCz.awip3dFF.tm00.bz2
#               SERVER-HTTP = NOMADS:/pub/data/nccf/com/gfs/prod/gfs.YYYYMMDD/gfs.tCCz.pgrb2\FFF.bz2
#               SERVER-NFS  = SCOTT:/data/archive/YYYYMMDD/grib/212/grib.tCCz/nam.tCCz.awip3dFF.tm00
#
#     In the first example above, STRC is the ID of the http server identified by  STRC = <hostname>
#     in the uems/conf/ems_prep/prep_hostkeys.conf file. The dataset files are located beneath the
#     /data/grib/YYYYMMDD/nam/grid212/grib.tCCz directory on the STRC server and a naming convention
#      of "nam.tCCz.awip3dFF.tm00.bz2", with space holders.
#
#     The ".bz2" extention on the filename indicates that the files are packed using bzip2. The
#     ems_prep.pl routine will automatically unpack ".gz" and ".bz2" files after downloading them
#     to the local server. If you are using files that are packed you must include the correct
#     suffix.
#
#
#     * NFS USERS *
#
#     In the SERVER-NFS example above, SCOTT is the server ID of the system where the data reside
#     and there is a corresponding SCOTT = <hostname> entry in prep_hostkeys.conf. Unlike the FTP
#     and HTTP options, either SERVER ID or an actual hostname ([user@]<hostname>:) may be used
#     to identify the source server. If a SERVER ID is used, all CAPITAL LETTERS must be used for
#     the SERVER ID below and in prep_hostkeys.conf. For example, if in prep_hostkeys.conf:
#
#       SCOTT = rozumal@scott
#
#     Then,
#
#       SERVER-NFS  = SCOTT:/data/grib/YYYYMMDD/gfs/grib.tCCz/YYMMDDCC.gfs.tCCz.pgrb2fFF
#     And
#       SERVER-NFS  = roz@scott:/data/grib/YYYYMMDD/gfs/grib.tCCz/YYMMDDCC.gfs.tCCz.pgrb2fFF
#
#     both work.
#
#     Why allow both options?  Including a SERVER ID in the "SERVER-NFS =" line also allows you to
#     specify the server when passing the "--dset <dset set>:nfs:<server>" flag (See --help dset).
#
#     As an example:
#
#       SERVER-NFS  = SERVER_A:/data/YYYYMMDD/grib.tCCz/nam.tCCz.awip3dFF.tm00.gz
#       SERVER-NFS  = SERVER_B:/data/YYYYMMDD/grib.tCCz/nam.tCCz.awip3dFF.tm00.gz
#
#     With SERVER_A and SERVER_B defined in prep_hostkeys.conf, then you can specify which server
#     to access:
#
#       % ems_prep  --dset <dataset>:nfs:server_b  [other flags and stuff]
#
#
#     If you don't include the "server_b", i.e, "--dset <dataset>:nfs", ems_prep.pl will use all
#     NFS servers listed in this file (SERVER_A and SERVER_B) in the data search.
#
#     IMPORTANT! - The ems_prep.pl routine uses the rsync utility to acquire data on any servers
#                  identified by SERVER-NFS  = <ID>: or with or with a hostname ([user@]<hostname>),
#                  so you MUST have passwordless ssh configured between the local machine and the
#                  remote system.
#
#     What is your data reside on the same machine as ems_prep.pl and you don't want to use rsync?
#     In that case set the SERVER ID to "LOCAL" or leave blank:
#
#       SERVER-NFS  = LOCAL:/data/YYYYMMDD/grib.tCCz/nam.tCCz.awip3dFF.tm00.gz
#     or
#       SERVER-NFS  = /data/YYYYMMDD/grib.tCCz/nam.tCCz.awip3dFF.tm00.gz
#
#     in which case ems_prep.pl will use the system copy command (cp) to access the requested files.
#
#     In most situations, data files are available from multiple remote servers each of which is
#     listed below. In that case, best practice is to specify neither the method nor the server,
#     ":method:server" from the command line:
#
#       % ems_prep --dset <dataset>
#
#     The ems_prep.pl routine will try each method-server combination until all the requested files
#     have been acquired.
#
#     To summarize:
#
#       % ems_prep --dset <dataset>:<method>:<server> - Get <dataset> via <method> from <server>
#
#       % ems_prep --dset <dataset>:<method>          - Get <dataset> from all the <method> servers
#                                                       defined in prep_hostkeys.conf
#
#       % ems_prep --dset <dataset>                   - Get <dataset> via all the methods and servers
#                                                       defined in prep_hostkeys.conf
#
SERVER-FTP  = NCEP:/pub/data/nccf/com/nam/prod/nam.YYYYMMDD/nam.tCCz.afwacaFF.tm00.grib2
SERVER-HTTP = NCEPWWW:/data/nccf/com/nam/prod/nam.YYYYMMDD/nam.tCCz.afwacaFF.tm00.grib2
SERVER-HTTP = NOMADS:/pub/data/nccf/com/nam/prod/nam.YYYYMMDD/nam.tCCz.afwacaFF.tm00.grib2
SERVER-HTTP = NOMADSW:/pub/data/nccf/com/nam/prod/nam.YYYYMMDD/nam.tCCz.afwacaFF.tm00.grib2

SERVER-HTTP = EMS3:/data/grib/namca/YYYYMM/YYYYMMDD/grib.tCCz/YYMMDDCC.nam.tCCz.afwacaFF.grb2



#  LOCFIL - Local file naming convention
#
#     LOCFIL defines the location (directory) and file naming convention of the initialization files
#     when initially downloaded to the local system. The purpose of this parameter is to ensure that
#     local filenames remain consistent even when naming conventions change between remote servers.
#     The filename defined by LOCFIL uses the same YYYY, MM, DD, CC, and FF placeholders described
#     in the SERVER-METHOD section above.
#
#     Example: LOCFIL = YYMMDDCC.gfs.tCCz.pgrb2fFF
#
LOCFIL = YYMMDDCC.nam.tCCz.afwacaFF.grb2


#  VTABLE & LVTABLE - The name of the variable table associated with this dataset.
#
#     VTABLE is the Vtable.<MODEL ID> to use when processing GRIB files into the WPS intermediate
#     format. All tables are located under the uems/data/conf/tables/vtables directory and are
#     used to define what fields to extract from the GRIB file for processing. Since Vtables only
#     specify which GRIB fields to process, a single Vtable may be copied for use with another
#     GRIB-based dataset.
#
#     LVTABLE specifies is the Vtable to use should this dataset be requested via the --lsm flag
#     or LSM parameter (See ems_autorun.conf). When requesting a dataset via this option, the
#     user wants a subset of the available fields, normally sub-surface and surface, to augment
#     the primary initialization dataset(s). The smaller set of GRIB fields are defined in the
#     variable table specified by LVTABLE.
#
#     If the dataset described by this file is only for use via the --lsm or LSM options, then
#     VTABLE may be excluded from this file. Alternatively, if there is no corresponding LSM
#     use for this dataset, LVTABLE is not required below.
#
#     Examples: VTABLE  = Vtable.HRRR
#               LVTABLE = Vtable.HRRRLSM
#
VTABLE = Vtable.NAM
LVTABLE = Vtable.NAMLSM


#**************************************************************************************************
#  STUFF YOU SHOULD WORRY YOUR PRETTY HEAD ABOUT
#**************************************************************************************************
#

#  MAXFREQ - The number of hours between forecast or analysis files in a dataset
#
#     MAXFREQ defines the period between consecutive data files for the dataset described in
#     this file. The value of MAXFREQ should only be changed if the available forecast or
#     analysis file frequency changes, such as the operational GFS moving from 3 to 1-hourly
#     forecast file frequency, which does not happen that often.
#
#     The purpose of MAXFREQ is to ensure that the user, which is you, does not specify a value
#     for FREQFH that is greater than the actual dataset availability, in which case ems_prep
#     will fail to locate all the requested data files for initialization.
#
MAXFREQ = 3


#  METGRID - The version of METGRID.TBL to use
#
#     METGRID is used to specify an alternate METGRID.TBL file when running the metgrid routine
#     as part of ems_prep.pl. If METGRID is not specified, then the default tables will be used
#     which should be fine for most applications. There are some datasets such as the NNRP, that
#     require an different file, which has been modified specifically for that dataset. If you
#     with to modify an existing METGRID.TBL file for the dataset described by this file, it is
#     recommended that you first make a copy of the original file, make your changes, and then
#     specify the new filename with the METGRID parameter below. For example, setting:
#
#         METGRID = METGRID.TBL.NNRP.ARW
#
#     instructs ems_prep.pl to use METGRID.TBL.NNRP.ARW instead of the default METGRID.TBL.ARW
#     file when doing horizontal interpolation from the donor to the computational grid.
#
#     All metgrid tables files reside in the uems/data/conf/tables/wps directory.
#
#     There is a single placeholder, "CORE", that may be used should there be a different metgrid
#     table file for each model core supported by the UEMS. This option is a hold-over from the
#     time when the NMM shared space with the ARW core in the EMS. Those days are long gone but
#     for sentimental reasons the "CORE" placeholder remains and will be populated with the "ARW"
#     string in the current release. No harm, no foul.
#
METGRID = METGRID.TBL.CORE


#  TIMEVAR - Whether LSM dataset is time-variant
#
#     Set TIMEVAR to Yes if the desired fields from this dataset are to be used as time-variant.
#     This parameter only applies to datasets being used to provide land surface model (LSM)
#     fields that are missing from the primary initialization datasets. Some dataset files,
#     such as NNRP require another source for the sub-surface and surface fields necessary
#     for initialization. Setting TIMEVAR = Yes instructs ems_prep to download and process
#     the required fields for each boundary condition update time. The TIMEVAR parameter is
#     only necessary for the few datasets being used to provide the missing fields. There
#     currently there is no way to override this value from the command line. It is best that
#     leave TIMEVAR commented out unless you know what you are doing, unlike the UEMS developer.
#
#      Note: This parameter is only used with the --lsm flag.
#
TIMEVAR = 


#  AGED - Maximum age of data from T0 to use in initialization
#
#     AGED is the number of days prior to the initialization date/time of your simulation before
#     this dataset is considered "too old" to be used. The UEMS will attempt obtain the most
#     current dataset file available, but should this file not be available, the UEMS will step
#     backwards in time up to AGED days until another acceptable data file is found.
#
#     Note that this parameter only applies to datasets containing static surface fields (--sfc)
#
#     Only after acquiring a suitable date/time from the requested dataset has failed will the
#     UEMS fail-over to an alternate dataset. If no alternate surface datasets are located, then
#     the fields from the primary initialization dataset will be used.
#
#     Note: This parameter is only used with the --sfc flag.
#
AGED = 


#==============================================================================================
# THE END - THAT'S ALL THERE IS FOR NOW - REALLY
#==============================================================================================
