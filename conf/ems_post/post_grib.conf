# ==============================================================================================
# THE UEMS GRIB 2 POST PROCESSING CONFIGURATION FILE
# ==============================================================================================
#
#  SO WHAT DOES THIS CONFIGURATION FILE DO FOR ME?
#
#    Below you will find parameters that control the post-processing of simulation output
#    into lovely GRIB 2 format. Please review and modify as necessary. .
#
#  THE GENERAL, YET IMPORTANT STUFF
#
#    The parameters contained in this file designated as "MAX DOMAINS" may include multiple
#    comma separated values to specify different settings for nested domains.
#
#      FREQ_WRF_GRIB = Primary Domain, Domain 2, Domain 3, ..., Domain N
#    Or
#      FREQ_WRF_GRIB = 180, 60, 15, 5
#
#    The domain number to process is specified by passing the "--domain #" flag to ems_post,
#    with the default being the primary domain (domain 1).
#
#    Failure to include a value below for a requested domain, E.g.,
#
#       FREQ_WRF_GRIB = 180, 60
#
#    when you are processing domain 3, ("--domain 3"), will result in the last value in
#    the parameter list being used (60), and you will like it.
#
#
#  THE MORE SPECIFIC BUT LESS IMPORTANT STUFF
#
#    *  You must either set GRIB = Y in post_uems.conf or pass the "--grib" flag to ems_post
#       for any of the settings in this file to be used.  If GRIB = N and "--grib" is not
#       passed, your effort here will be wasted.
#
#    *  All GRIB 2 files are created from the raw simulation output in netCDF format. Any
#       secondary file formats (GEMPAK, GrADS) are derived from the GRIB 2 files.
#
#    *  The default settings in this file should work for most applications and do not need
#       to be modified unless you are trying something fancy.
#
#    *  Two different accumulation fields are available for each precipitation field, a
#       simulation and period (bucket dump) amount. The length of the accumulation period
#       for the bucket dump fields is controlled by the ACCUM_PERIOD_ parameters below.
#       This is NOT the same as the FREQUENCY_ parameters, which controls the interval
#       between simulation output times to process. The UEMS UPP doesn't care, so neither
#       should you.
#
#    *  Finally, the UEMS knows the interval between simulation output files from your
#       run, just in case you try something dangerous like setting the accumulation
#       period shorter than the time between model output dumps.
#
#  SOMETHING FAR LESS EXCITING
#
#    If you want to export any data types described in this file to exotic locations, then
#    please be sure to review the post_export.conf file before it is too late.
#
#
#  LOG:  R.Rozumalski - NWS September 2017
# ==============================================================================================
# ==============================================================================================
#

#  FREQ_WRF_GRIB & FREQ_AUX_GRIB (MAX DOMAINS)
#
#     The FREQ_WRF_GRIB and FREQ_AUX_GRIB parameters define the frequency, in minutes, of the
#     primary (wrfout_*) and auxiliary (auxhist1_*) simulation output files to be processed
#     into GRIB 2 format. Setting the value to "Auto", "0", "1", or leaving it blank will
#     result in all output times being processed. The FREQ_AUX_GRIB parameter will be ignored
#     if you are not processing auxiliary files. Similar for the wrfout_ files.
#
#     As an example, if the period between simulation output times is 15 minutes, then setting
#     FREQ_WRF_GRIB or FREQ_AUX_GRIB to 30 (minutes) will result in every 2nd output
#     time being processed, i.e., 30, 60, 90, ..., minute files.
#
#
#     COMPLETELY OPTIONAL STUFF FOR THOSE LIVING "LA MODELO LOCO"
#
#     You can refine your GRIB files processing by using the "FREQ:START:STOP" string instead
#     of the single frequency value described above. This string is used to specify the
#     frequency (as above), as well as the start and stop times (all minutes) for the data
#     files to process. The "FREQ:START:STOP" string may be specified once, in which case it
#     will be applied to all domains for which data were output, or individual values for each
#     domain. For example, if you only want to process the 60 through 180 minute forecast files
#     at a 30 minute frequency, then set:
#
#       FREQ_WRF|AUX_GRIB = 30:60:180
#
#     Note that the "30:60:180" will be applied to each domain being processed into GRIB since
#     only one value has been specified. Also, there are tests to ensure that your time range
#     falls within that of your simulation so you can't mess things up too badly.
#
#     Word of caution: Any secondary datasets that originate from the GRIB 2 files will be
#     limited to the GRIB files created with the FREQ_WRF|AUX_GRIB parameter setting.
#
#     Finally, the value of FREQ_WRF|AUX_GRIB may be overridden by passing the string
#     "FREQ:START:STOP" as an argument to the "--grib" flag for ems_post.
#
#
#     A WORD ABOUT THE TEMPORAL MAX, MIN, AND MEAN FIELDS IN THE GRIB 2 FILES
#
#     The temporal maximum, minimum, and mean fields calculated during the simulation and
#     written to the output netCDF files, such as max/min/mean 2m temperature are only valid
#     over the period between output times and NOT the period defined by FREQUENCY_*.
#     Consequently, for a model output frequency of 30 minutes, setting FREQ_WRF_GRIB = 60
#     will result in hourly GRIB 2 files containing max/min/mean fields valid only over the
#     previous 30 minutes. The fields will have the correct times in the GRIB files however.
#
#     The above information only applies to the period max/min/mean fields and not the
#     accumulated precipitation fields.
#
#  DEFAULTS: FREQ_WRF|AUX_GRIB = Auto
#
FREQ_WRF_GRIB = Auto
FREQ_AUX_GRIB = Auto



#  ACCUM_PERIOD_WRF & ACCUM_PERIOD_AUX (MAX DOMAINS)
#
#     The ACCUM_PERIOD_WRF and ACCUM_PERIOD_AUX parameter values specify the period,
#     in minutes, between precipitation bucket dumps when processing the primary primary
#     (wrfout_*) and auxiliary (auxhist1_*) simulation output files into GRIB 2 format.
#     Since the netCDF files output simulation cumulative precipitation (i.e., beginning
#     at T0), bucket dumps over any period length can be calculated, provided the period
#     is either;
#
#       1) the same as the period between the GRIB file processing times for a specified
#          domain (FREQ_WRF|AUX_GRIB), or
#
#       2) Over the entire length of the simulation.
#
#     That's correct, no more fooling around with odd-ball accumulation periods, forcing
#     uncle UEMS to translate your hair-brained idea something semi logical for the UEMS
#     UPP to calculate. You either follow the rules or the rules will be tap-dancing on
#     your knuckles, just like the nuns used do to me in elementary school! And just
#     in case you are wondering, yes the (physical) scars have healed.
#
#     Setting the value to "Auto", "0", "1", or leaving it blank will result in the
#     accumulation period being set to the same value as FREQ_WRF|AUX_GRIB above. Set
#     the value to 'Run' or 'Simulation', or a value (minutes) greater than the simulation
#     run length and you will get a storm total accumulation.
#
#  DEFAULTS: ACCUM_PERIOD_WRF|AUX = Auto
#
ACCUM_PERIOD_WRF = Auto
ACCUM_PERIOD_AUX = Auto



#  GRIB_CNTRL_WRF & GRIB_CNTRL_AUX (MAX DOMAINS)
#
#     The GRIB_CNTRL_WRF and GRIB_CNTRL_AUX parameter values specify the names of
#     the GRIB processing control files to use with the primary (wrfout_*) and auxiliary
#     (auxhist1_*) simulation output files. These files are located in the "static/"
#     subdirectory below each run-time domain, and are used to specify the fields written
#     to GRIB 2 by the emsupp routine. You can create and configure a different control
#     file for each nested domain by specifying multiple filenames separated by a comma,
#     although this is not recommended configuring multiple files would take some time.
#
#     The auxiliary dataset control file(s) specified by GRIB_CNTRL_AUX contain a
#     subset of the fields in the primary dataset control file. This is because the raw
#     netCDF auxiliary files contains only select surface and shelter (2 & 10m) fields,
#     and not the full compliment of 3D fields found in the primary file output.
#
#     The default primary and auxiliary control files were placed in the static/ directory
#     when the run-time domain was created. These files are reasonably well-documented and
#     it's in your best interest to become familiar with the many fields described within
#     them. If you use different control files for nested domains, simply make a copy of
#     the default primary or auxiliary file and specify the new filename in the list below.
#
#     Each filename must be separated by a comma (,). In the absence of a file for given
#     sub domain the last filename in the list will be used.
#
#     E.g.:  GRIB_CNTRL_WRF = emsupp_cntrl_d01.parm, emsupp_cntrl_d02.parm,...,emsupp_cntrl_d0N.parm
#
#     Finally, should you screw something up in the file and don't know how to fix it, just
#     make a copy a master control file from the uems/data/tables/post/grib directory and
#     rename it to match the one you mangled.
#
#  DEFAULTS: GRIB_CNTRL_WRF = emsupp_cntrl.parm
#            GRIB_CNTRL_AUX = emsupp_auxcntrl.parm
#
GRIB_CNTRL_WRF  = emsupp_cntrl.parm
GRIB_CNTRL_AUX  = emsupp_auxcntrl.parm



# ==============================================================================================
#   PARAMETERS RELATED TO RUNNING THE EMSUPP ACROSS MULTIPLE NODES.
# ==============================================================================================
#
#
#  EMSUPP_NODECPUS
#
#     EMSUPP_NODECPUS is a list of machines, processors, and IP addresses that define the
#     parallel computing configuration when running the EMSUPP routine to process model output
#     into GRIB 2 files. EMSUPP_NODECPUS has the following format:
#
#       EMSUPP_NODECPUS = hostname1:NP:IP,hostname2:NP:IP,...,hostnameN:NP:IP
#     or
#       EMSUPP_NODECPUS = NP        \
#     or                              These 2 are the same
#       EMSUPP_NODECPUS = local:NP  /
#
#
#     Where "hostname" is the hostname of the system or node, "NP" is the number of processors
#     to use on that node, and "IP" is the IP address to use for communication to the other
#     nodes.
#
#     The hostname, number of processors, and IP address are separated by a colon (:) with
#     each system in the list separated by a comma (,).
#
#     Using a literal "local" refers to the local machine on which ems_post is run.
#
#     In the absence of either an IP address or hostname, the UEMS will attempt to resolve
#     the missing value through an often erroneous and convoluted sequence of system calls.
#     In spite of this approach, the method usually works well.
#
#     Important: On MULTI-HOMED systems that communicate over 2 or more subdomains, it is
#     critical that the IP address be specified for the private/isolated network!
#
#     Using either EMSUPP_NODECPUS = NP  or EMSUPP_NODECPUS = local:NP will result in post
#     processing being done on the local system ONLY, with the number of processors specified
#     by "NP".  In fact, including "local" anywhere in the list of machines will result in
#     the UEMS using ONLY the local system. All other hostnames are ignored.
#
#     Also, there is no difference between listing processors individually or by using the
#     ":NP", so that:
#
#       EMSUPP_NODECPUS = machine1,machine1,machine1,machine1
#
#     Is the same as:
#
#       EMSUPP_NODECPUS = machine1:4
#
#
#     Failure to correctly specify the machine and number of CPUs will result in EMSUPP
#     being run on the local host with the number of CPUs defined by the environment variable
#     OMP_NUM_THREADS (SOCKETS * CORES), which is defined in the etc/EMS.cshrc or EMS.profile
#     file.
#
#     EXAMPLES
#
#       1. Run the EMSUPP on 3 nodes (node1,node2, and node3), each with 2 sockets and 4 cores
#          per socket for a total of 8 total cores/processors per node. All communication will
#          be done via the subnet 10.1.1.#:
#
#            EMSUPP_NODECPUS = node1:8:10.1.1.1,node2:8:10.1.1.2,node3:8:10.1.1.3
#
#       2. Run the EMSUPP on the local machine only with one socket and 6 cores per socket for
#          a total of 6 cores/processors.
#
#            EMSUPP_NODECPUS = 6 or EMSUPP_NODECPUS = local:6 or EMSUPP_NODECPUS = local
#
#
#     A LIST OF STRONG RECOMMENDATIONS OR "SUGGESTIONS"
#
#     SUGGESTION #1 - Attempting to use the "virtual" processors available on a machine when
#     hyper-threading is turned ON will result in a degradation in overall performance, i.e.,
#     the creation of your GRIB files will take longer. This is due to the sharing of resources
#     on each processor (core), which increases the latency in communication. So, at least for
#     this case, more is not always better.
#
#     SUGGESTION #2 - Turn hyper-threading OFF in the BIOS. Even if you follow SUGGESTION #1,
#     the system kernel may schedule multiple threads (processes) per core when hyper-threading
#     is ON. So again, cores may be sharing resources, which results in a degradation in UEMS
#     system performance. You can actually test this by measuring the time required to run
#     EMSUPP from the command line for a single WRF netCDF file multiple times in succession,
#     and using the same number of cores each time. With hyper-threading ON you should notice
#     much more run-to-run variability when compared to the same set of tests with hyper-
#     threading OFF.
#
#     SUGGESTION #3 - If you are configuring this file as part of an ems_aurorun simulation in
#     which you plan on using the AUTOPOST option, then "EMSUPP_NODECPUS = local:#"  refers to
#     the hostname identified by the AUTOPOST_HOST field in the ems_autopost.conf file. OK,
#     that's not a suggestion as much as some important information.
#
#     IMPORTANT #1 - The EMSUPP only decomposes a domain in the NY direction, meaning that a
#     domain will be decomposed into #NCPU patches, consisting of NX x NY/#NCPUs grid points.
#     It is critical that the number of Y-dir grid points per patch DOES NOT FALL BELOW 6;
#     otherwise you are likely to have problems and possibly a crash. For example, if you
#     have a domain consisting of 121 x 101 (NX x NY) grid points, each patch will have
#     121 x 101/ncpus grid points. This means that you can use a maximum of 16 CPUs for
#     this task.
#
#     IMPORTANT #2 - The actual number of cores used by ems_post to process a specific domain
#     will be automatically adjusted to meet the requirement specified in "IMPORTANT #1".
#
#  DEFAULT: EMSUPP_NODECPUS = MAX CPUs - 1
#
EMSUPP_NODECPUS = local:10


# ==============================================================================================
#   ADDITIONAL GRIB RELATED PARAMETERS THAT YOU CAN CHANGE BUT AT THE RISK OF VOIDING
#   THE UEMS WARRANTY.
# ==============================================================================================
#


#  MDLID, OCNTR, & SCNTR (MAX DOMAINS)
#
#     The MDLID, OCNTR, and SCNTR parameters define the processes number, originating center,
#     and sub-center of the created GRIB 2 files respectively. These values are used to
#     identify the parameter tables used when unpacking the GRIB files; however, since the
#     EMSUPP writes fields directly to GRIB 2 format, these values may only be important
#     for distinguishing between simulations within an operational setting. Overall, it's
#     probably best to leave them blank and let mother nature take its course.
#
#     MDLID is the Model ID number, or process number, used to identify the GRIB dataset.
#     By default, MDLID is left blank or commented out, in which case a value will be
#     assigned that is consistent with the core being run.
#
#     The default value is 116, which stands for "wrf_em_ncar_arwrf" in the GRIB 2 tables
#     and is used by NCEP for their operational ARW core runs. Any changes to the default
#     value should be within the range of 111 to 254. Values lower than 111 will conflict
#     with existing process IDs and those greater than 255 will be internally changed to
#     '201'.
#
#  DEFAULT: MDLID = <blank>
#
MDLID =


#     OCNTR is the originating center of the GRIB file. By default the value is set to 07,
#     which is used to designate NWS NCEP and it is highly recommended that you use this
#     value.
#
#     If you have a death wish and decide to change the value of OCNTR then be forewarned
#     that you will likely encounter problems with the GRIB decoding software that you are
#     using as the OCNTR value helps identify which GRIB tables to use for unpacking the file.
#
#     Recommend value: OCNTR = 07 - US National Weather Service - NCEP
#
#  WARNING: Please understand that changing OCNTR from the default value of 07 may result
#           in the composite reflectivity fields being identified as "squid fertility index".
#
#  DEFAULT: OCNTR = 07
#
OCNTR = 07


#     SCNTR is the originating sub-center of the GRIB file. By default the value is set to
#     20+<domain number> but you may change it as necessary with little or no impact to
#     GRIB decoding software.  Values between 1 and 13 are already taken by NCEP so 20+
#     seems like a good starting point.
#
#     Maybe someday the UEMS will have its own subcenter ID, but I have yet to request one.
#     Besides, the power will just go to my head.
#
#  DEFAULT: Leave blank and let the UEMS do its magic.
#
SCNTR =


# ==============================================================================================
#   ADDITIONAL PARAMETERS THAT YOU CAN CHANGE BUT YOU PROBABLY DON'T WANT TO BOTHER
# ==============================================================================================
#

#  FILENAME_GRIB
#
#     The FILENAME_GRIB parameters (not max domains) define the naming convention for the final
#     GRIB 2 files created from both the primary and auxiliary simulation output files. When
#     defining the filename, placeholders should be used so that previously created files areA
#     not accidentally over-written.
#
#     The list of available placeholders includes the following:
#
#         YYYY - 4-digit Year  (Initialization)
#         YY   - 2-digit Year  (Initialization)
#         MM   - 2-digit Month (Initialization)
#         DD   - 2-digit Day   (Initialization)
#         HH   - 2-digit Hour (24-hour clock) (Initialization)
#         MN   - 2-digit Minute (Initialization)
#         SS   - 2-digit Second (Initialization)
#
#         V4Y  - 4-digit Year  (Verification)
#         V2Y  - 2-digit Year  (Verification)
#         VM   - 2-digit Month (Verification)
#         VD   - 2-digit Day   (Verification)
#         VH   - 2-digit Hour (24-hour clock) (Verification)
#         VN   - 2-digit Minute (Verification)
#         VS   - 2-digit Second (Verification)
#
#         WD   - 2-digit domain number
#         CORE - 3-character core ID (currently arw only) - lower case
#         KEY  - The string that identifies the primary (wrfout) or auxiliary (auxhist) files
#
#     For the verification/forecast time string
#
#         FH    - 4-digit forecast hour (0 to forecast length - 0006, 0024, or 0144)
#         FZ    - 3-digit forecast hour (0 to forecast length - 006, 024, or 144)
#         FX    - Auto-adjusted 2 to 4 digit forecast hour (0 to forecast length - 06 or 24)
#         FM    - 2-digit forecast minute (0 to 60)
#         FS    - 2-digit forecast second (0 to 60)
#      FCSTM    - Forecast time string formatted as HH[H[H]]:MM:SS
#
#     E.g., If FILENAME_GRIB = YYMMDDHHMN_CORE_dWD.grb2fFHFMFS, then the final grib files
#           will be named something like: 0403111200_arw_d01.grb2f00153000
#
#  NOTE: Like many things in the UEMS, the effects of changing the value of FILENAME_GRIB are not
#        known. Change at your own risk. And have a nice day!
#
#  DEFAULTS: FILENAME_GRIB = YYMMDDHHMN_KEY_CORE_dWD.grb2fFXFMFS
#
FILENAME_GRIB  = YYMMDDHHMN_KEY_CORE_dWD.grb2fFXFMFS



#  MPICHECK
#
#     Setting MPICHECK to any value will cause the UEMS to run a simple network check prior to
#     running emsupp across multiple system. It's purpose is only to make sure the machine(s)
#     you have listed in EMSUPP_NODECPUS are reachable and properly configured for the EMS.
#     If you have run the "mpicheck" routine (uems/strc/EMSbin/mpicheck) manually and feel
#     comfortable that your cluster is configured correctly, then you can leave MPICHECK blank
#     and save yourself about 30 seconds of execution time.
#
#  DEFAULT: MPICHECK = 1
#
MPICHECK = 1


# ==============================================================================================
# THE END OF THE UEMS GRIB 2 POST PROCESSING CONFIGURATION FILE
# ==============================================================================================

